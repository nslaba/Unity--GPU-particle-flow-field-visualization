#pragma kernel Main

RWTexture2D<float4> Result;

cbuffer PerFrame : register(b0)
{
    float2 Resolution;
};

float rand(float n)
{
    return frac(sin(n) * 43758.5453123);
}

float noise(float2 n)
{
    const float2 d = float2(0.0, 1.0);
    float2 b = floor(n);
    float2 f = smoothstep(float2(0.0, 0.0), float2(1.0, 1.0), frac(n));
    return lerp(
        lerp(rand(dot(b, float2(1.0, 1.0))),
             rand(dot(b + d.xy, float2(1.0, 1.0))), f.x),
        lerp(rand(dot(b + d.yx, float2(1.0, 1.0))),
             rand(dot(b + d.xx, float2(1.0, 1.0))), f.x), f.y);
}

float perlin(float2 p)
{
    return noise(p);
}

[numthreads(8, 8, 1)]
void Main(uint3 id : SV_DispatchThreadID)
{
    float2 uv = float2(id.xy) / Resolution;
    Result[id.xy] = float4(perlin(uv * 10.0f), 0.0f, 0.0f, 1.0f);
}
